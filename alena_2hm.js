//Вам необхідно вказати, яким буде результат операції та описати крок за кроком у вигляді коментарів, як відбувається перетворення в кожному прикладі:
//
// console.log('number' + 3 + 3) /  першою іде стрінга, тому плюсується 'number33'

//console.log(null + 3) // null як пустота або 0, результатом буде 3

// console.log(5 && "qwerty")// обидва значення істинні, результатом буде "qwerty" бо правіше?

// console.log(+'40' + +'2' + "hillel") // результатом буде '42hillel', стрінга 40 + стрінга 2 + стрінгаhillel

// console.log('10' - 5 === 6) //  результатом буде false, 10-5 = 5, і потім строго прирівнюється до 6ти

// console.log(true + false) //true  або 1, бо тру =1, фолс= 0, 1+0 = 1

// console.log('4px' - 3) //  NaN ,  JS не зрозуміє шо таке 4px

// console.log('4' - 3)  // результатом буде 1, 4-3 = 1

// console.log('6' + 3 ** 0) // 3 зводиться до 0 ступеню = 1, потім конкатинація, результатом буде '61'
//
// console.log(12 / '6')  // результатом буде 2, 12 поділити на 6 = 2
//
// console.log('10' + (5 === 6)) //  результатом буде  '10false', спочатку 5 строго не дорівнює 6,тобто фолс, потім відбувається конкатинація

// console.log(null == '')  // результатом буде фолс, бо нал не дорівнює пустоті

// console.log(3 ** (9 / 3)) // результатом буде 27, спочатку 9 ділимо на 3, потім 3 зводимо до 3го ступеню

// console.log(!!'false' == !!'true') буде тру, тому шо як в лекціі Логічний оператор "НІ" (NOT): ! - інвертує булеве значення. Наприклад, !true поверне false, а !false поверне true
// Все перетворюється на boolean. При цьому 0, '', null, undefined, NaN => все перетворюється на false
//Решта - true!!

// console.log(0 || '0' && 1) // результатом буде 1, спочатку обчислюється вираз '0' && 1 логічне і =1, потім 0 або 1, буде 1

// console.log((+null == false) < 1) // результатом буде фолс, бо спочатку +null перетворюється на 0 , 0 дорівнює фолс тобто тру, тру = 1, 1 < 1 дорівнює фолс

// console.log(false && true || true) // відповідь буде тру так як логічний опертор і вищий, спочатку обчислюємо false && true , буде фолс,бо і шукає перше хибне значення, потім тру або тру, буде тру, або шукає перше правдиве значення,

// console.log(false && (false || true)) // false. спочатку виконується логічне або (false || true), результатом буде тру, бо або шукає перше правдиве значення, потім виконується логічний і, false && true, буде фолсе, бо логічне і знаходить перше хибне значення

// console.log((+null == false) < 1 ** 5), буде фолс, спочатку виконується (+null == false), результатом буде тру 0=фолсе, далі 1 взводиться до 5го ступеню, буде 1, далі вираз тру меньше 1, дорівнює фолс

